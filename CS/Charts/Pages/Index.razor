@page "/"

@using Charts.Data
@using Charts.Models
@inject WeatherForecastService ForecastService

<DxGrid Data=@GridData CssClass="mw-1100" FocusedRowEnabled="true" FocusedRowChanged="OnFocusedRowChanged">
    <Columns>
        <DxGridDataColumn Caption="Year" FieldName="Year" DisplayFormat="d" TextAlignment="GridTextAlignment.Left" />
    </Columns>
</DxGrid>

<DxChart Data="@SelectedChartData" CssClass="mw-1100">
    <DxChartBarSeries Name="@Year.ToString()" ArgumentField="@((Sales s) => s.City)" ValueField="@((Sales s) => s.Amount)">
        <DxChartSeriesLabel Visible="false" />
    </DxChartBarSeries>
    <DxChartLegend Position="@RelativePosition.Outside" HorizontalAlignment="@HorizontalAlignment.Right" />
    <DxChartValueAxis Name="TotalAxis" Position="@HorizontalEdge.Left">
        <DxChartAxisTitle Text="@nameof(Sales.Amount)"></DxChartAxisTitle>
    </DxChartValueAxis>
    <DxChartArgumentAxis>
        <DxChartAxisTitle Text="@nameof(Sales.City)"></DxChartAxisTitle>
    </DxChartArgumentAxis>
</DxChart>

@code {
    int Year;
    public IEnumerable<Sales> SelectedChartData;
    List<Sales> GridData = new List<Sales>();
    List<Sales> allData = Sales.GetSalesList();

    protected override async Task OnInitializedAsync() {
        GridData = allData.GroupBy(i => i.Year).Select(g => g.First()).ToList();
        Year = GridData.First().Year;
        SelectedChartData = allData.Where(i => i.Year == Year);
    }
    void OnFocusedRowChanged(GridFocusedRowChangedEventArgs e) {
        if (e.DataItem != null) {
            Sales focusedDataItem = (Sales)e.DataItem;
            Year = focusedDataItem.Year;
            SelectedChartData = allData.Where(i => i.Year == Year);
        }
    }    
}
